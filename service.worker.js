const version="v2",cacheName="app = v2",files=["./","./index.html","./index.bundle.js","./main.css","./patternbg.png"];async function putFilesToCache(e){const a=await caches.open(cacheName);await a.addAll(e)}async function removeOldCache(e){console.log("удаление");const a=await caches.keys();return Promise.all(a.filter((a=>!e.includes(a))).map((e=>caches.delete(e))))}self.addEventListener("install",(e=>{console.log("установлен"),e.waitUntil((async()=>{await putFilesToCache(files),await self.skipWaiting()})())})),self.addEventListener("activate",(e=>{console.log("активирован"),e.waitUntil((async()=>{await removeOldCache([cacheName]),await clients.claim()})())})),self.addEventListener("fetch",(e=>{new URL(e.request.url).pathname.startsWith("/getnews")?e.respondWith((async()=>{const a=await caches.open(cacheName);try{const t=await fetch(e.request);if(200!==t.status)throw new Error("ошибка сервера");return e.waitUntil(a.put(e.request,t.clone())),console.log("данные с сервера получены"),t}catch(t){console.log(t),console.log("Получаем данные из кэша");const n=await a.match(e.request);if(n)return n}throw new Error("Нет сохранненных данных")})()):e.respondWith((async()=>{const a=await caches.open(cacheName),t=await a.match(e.request);if(t)return t})())}));